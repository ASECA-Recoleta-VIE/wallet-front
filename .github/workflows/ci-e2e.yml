name: Frontend E2E CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  e2e:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: walletdb
          POSTGRES_USER: walletuser
          POSTGRES_PASSWORD: walletpassword
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout frontend
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install frontend dependencies
        run: npm install

      - name: Build frontend
        run: npm run build

      - name: Start frontend server
        run: npm run preview &
        env:
          NODE_ENV: test

      - name: Wait for frontend to be ready
        uses: jakejarvis/wait-action@v0.1.0
        with:
          url: http://localhost:5173
          timeout: 60

      - name: Login to GitHub Container Registry (GHCR)
        run: echo "${{ secrets.GH_PAT }}" | docker login ghcr.io -u Pagliaricci --password-stdin

      - name: Pull wallet-back image (verificación)
        run: docker pull ghcr.io/aseca-recoleta-vie/wallet-back:latest-stable

      - name: Start wallet-back container
        run: |
          docker run -d --name wallet-back \
            -e SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/walletdb \
            -e SPRING_DATASOURCE_USERNAME=walletuser \
            -e SPRING_DATASOURCE_PASSWORD=walletpassword \
            -p 8080:8080 \
            ghcr.io/aseca-recoleta-vie/wallet-back:latest-stable

      - name: Wait for backend to be ready
        uses: jakejarvis/wait-action@v0.1.0
        with:
          url: http://localhost:8080/actuator/health
          timeout: 60

      - name: Eliminar caché previa de Cypress
        run: rm -rf ~/.cache/Cypress
      - name: Run Cypress tests
        run: npx cypress run